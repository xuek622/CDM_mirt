response
apply(is.na(response), 2, any)
dim(response[, !apply(is.na(response), 2, any)])
file
# too little response
response <- response[, !apply(is.na(response), 2, any)]
names(response)
# too little response
response <- response[, !apply(is.na(response), 2, any)] %>%
dplyr::select(-useraccount_id)
dim(response)
file
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response, file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- fread(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
response <- read.csv(file = file)
response
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read.csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
dim(response)
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
mod_2PL
coef(mirt1)
coef(mod_2PL)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame()
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper")
coef_mod_2PL
names(response)
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
response
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE, col.names = TRUE)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read.csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
response
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write_csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
}
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write_csv2(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
}
typeof(response)
# too little response
response <- response[, !apply(is.na(response), 2, any)] %>%
data.frame() %>%
as.tibble()
response
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
response
names(response)
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read.csv(file = file, header = TRUE) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read.csv(file = file, header = TRUE) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
response <- read_csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame()
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper")
rownames(coef_mod_2PL) <- names(response)
coef_mod_2PL
response <- read_csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame() %>%
mutate(unique_id = names(response))
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper", 'unique_id')
coef_mod_2PL
names(response)
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
response <- read.csv(file = file, header = TRUE) %>%
as.tibble() %>%
dplyr::select(-useraccount_id)
response
response <- read.csv(file = file, header = TRUE) %>%
as.tibble()
response
read.csv(file = file, header = TRUE)
read.csv
?read.csv
response <- read.csv2(file = file, header = TRUE) %>%
dplyr::select(-useraccount_id)
response <- read.csv2(file = file, header = TRUE)
response
response <- read_csv2(file = file, header = TRUE)
response
response <- read_csv2(file = file)
response
response <- read_csv(file = file)
response
?write.csv
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE, col.names = 1)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
dplyr::select(-useraccount_id)
response
response <- read.csv(file = file) %>%
dplyr::select(-useraccount_id)
response
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
response
file <- dir(data.path)[grepl(domain, dir(data.path))]
file
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- fread(file = file.path(data.path, file)) %>%
as.tibble() %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
response
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
response
# too little response
response <- response[, !apply(is.na(response), 2, any)]
response
dir(data.path)
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
response
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE, col.names = 1)
write_csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE, col.names = 1)
write_csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
response
domain <- '571'
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
response
# too little response
response <- response[, !apply(is.na(response), 2, any)]
response
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write.csv(response,
file = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')),
row.names = FALSE)
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read.csv(file = file) %>%
dplyr::select(-useraccount_id)
response
?write_csv
write_csv(response,
file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write_csv(response,
file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv')))
}
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
dplyr::select(-useraccount_id)
response
domain <- '571'
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
dplyr::select(-useraccount_id)
names(response)
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame() %>%
mutate(unique_id = names(response))
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper", 'unique_id')
coef_mod_2PL
irt_theta <- cbind(fscores(mod_2PL))
irt_theta
# save data
write_csv(data = coef_mod_2PL,
path = file.path(save.path, paste('tys_1718', domain, 'item_parameter_estimate_mirt.csv')))
coef_mod_2PL
# save data
write_csv(data = coef_mod_2PL,
path = file.path(save.path, paste('tys_1718', domain, 'item_parameter_estimate_mirt.csv')))
?write_csv
# save data
write_csv(x = coef_mod_2PL,
path = file.path(save.path, paste('tys_1718', domain, 'item_parameter_estimate_mirt.csv')))
write_csv(x = irt_theta,
path = file.path(save.path, paste('tys_1718', domain, 'ability_mirt.csv')))
irt_theta <- fscores(mod_2PL)
irt_theta
typeof(irt_theta)
irt_theta <- fscores(mod_2PL) %>%
as.data.frame()
dim(irt_theta)
irt_theta
names(irt_theta) <- 'ability'
for (domain in unique(user_id$domain_id)) {
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv'))
response <- read_csv(file = file) %>%
dplyr::select(-useraccount_id)
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame() %>%
mutate(unique_id = names(response))
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper", 'unique_id')
irt_theta <- fscores(mod_2PL) %>%
as.data.frame()
names(irt_theta) <- 'ability'
# save data
write_csv(x = coef_mod_2PL,
path = file.path(save.path, paste('tys_1718', domain, 'item_parameter_estimate_mirt.csv')))
write_csv(x = irt_theta,
path = file.path(save.path, paste('tys_1718', domain, 'ability_mirt.csv')))
}
library(tidyverse)
library(mirt)
library(data.table)
root.path <- file.path('~', "Dropbox", 'Research', 'Research_Assistance',
'UF_Algebra_Nation_2018', "Code", "DFN")
data.path <- file.path(root.path, 'response')
save.path <- file.path(root.path, 'Real_Data')
user_id <- fread(file = file.path(root.path, "Simulated_Data", "dev_scale_score_all_domain.csv")) %>%
as.tibble() %>%
filter(Response_Pattern == "answer all items")
# save anchor student responses
for (domain in unique(user_id$domain_id)) {
file <- dir(data.path)[grepl(domain, dir(data.path))]
sub_user_id <- user_id %>%
filter(domain_id == domain)
response <- read_csv(file = file.path(data.path, file)) %>%
filter(useraccount_id %in% sub_user_id$useraccount_id)
# too little response
response <- response[, !apply(is.na(response), 2, any)]
write_csv(x = response,
path = file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv', sep = "_")))
}
# estimate anchor student ability and item parameters using mirt
for (domain in unique(user_id$domain_id)) {
file <- file.path(save.path, paste('tys_1718', domain, 'anchor_student_response.csv', sep = "_"))
response <- read_csv(file = file) %>%
dplyr::select(-useraccount_id)
mod_2PL <- mirt(data = response,
model = 1, itemtype = "2PL",
SE = TRUE)
coef_mod_2PL <- coef(mod_2PL)[-length(coef(mod_2PL))] %>%
bind_rows()
coef_mod_2PL <- coef_mod_2PL[1:6,] %>%
t() %>%
as.data.frame() %>%
mutate(unique_id = names(response))
names(coef_mod_2PL) <- c("a", "a_lower", "a_upper", "d", "d_lower", "d_upper", 'unique_id')
irt_theta <- fscores(mod_2PL) %>%
as.data.frame()
names(irt_theta) <- 'ability'
# save data
write_csv(x = coef_mod_2PL,
path = file.path(save.path, paste('tys_1718', domain, 'item_parameter_estimate_mirt.csv', sep = "_")))
write_csv(x = irt_theta,
path = file.path(save.path, paste('tys_1718', domain, 'ability_mirt.csv', sep = "_")))
}
